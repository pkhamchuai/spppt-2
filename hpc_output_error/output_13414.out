Seed: 17931954950336742649
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f28653eabb0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f28653eabb0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-122353
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-122353_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-122353_test/test_output_DHR_31100_0.001_0_1_1_20240220-122353.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 12535670600775353646
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f3f2cb1eac0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f3f2cb1eac0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-122540
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-122540_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-122540_test/test_output_DHR_31100_0.001_0_1_1_20240220-122540.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 5073312047769009168
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f0cc8fd6040>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f0cc8fd6040>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-122718
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-122718_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-122718_test/test_output_DHR_31100_0.001_0_1_1_20240220-122718.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 10105194931643606896
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f7444bfc940>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f7444bfc940>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-122937
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-122937_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-122937_test/test_output_DHR_31100_0.001_0_1_1_20240220-122937.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 11898883436802221375
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f2d52f16b80>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f2d52f16b80>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-123154
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-123154_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-123154_test/test_output_DHR_31100_0.001_0_1_1_20240220-123154.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 6764920615747204056
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f2823ff4ca0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f2823ff4ca0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-123414
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-123414_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-123414_test/test_output_DHR_31100_0.001_0_1_1_20240220-123414.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 1075433191887556876
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f42a7d6bdc0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f42a7d6bdc0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-123631
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-123631_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-123631_test/test_output_DHR_31100_0.001_0_1_1_20240220-123631.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 1851925390124362386
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f562889cc70>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f562889cc70>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-123849
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-123849_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-123849_test/test_output_DHR_31100_0.001_0_1_1_20240220-123849.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 5504892656540272639
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f2856b8fa60>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f2856b8fa60>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-124111
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-124111_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-124111_test/test_output_DHR_31100_0.001_0_1_1_20240220-124111.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 3928318537541801929
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f8ef084fd60>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f8ef084fd60>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-124330
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-124330_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-124330_test/test_output_DHR_31100_0.001_0_1_1_20240220-124330.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 5153914062019043369
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7fca3d3ced90>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7fca3d3ced90>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-124549
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-124549_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-124549_test/test_output_DHR_31100_0.001_0_1_1_20240220-124549.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 5558872533553514519
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7eff3d7ace80>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7eff3d7ace80>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-124805
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-124805_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-124805_test/test_output_DHR_31100_0.001_0_1_1_20240220-124805.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 161873129132166500
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7fa3a63b0e20>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7fa3a63b0e20>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-125022
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-125022_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-125022_test/test_output_DHR_31100_0.001_0_1_1_20240220-125022.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 8241501049168541928
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f293a3a79a0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f293a3a79a0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-125238
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-125238_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-125238_test/test_output_DHR_31100_0.001_0_1_1_20240220-125238.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 4970557456204400435
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7fa9a1080f70>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7fa9a1080f70>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-125458
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240220-125458_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240220-125458_test/test_output_DHR_31100_0.001_0_1_1_20240220-125458.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 10068102396203282002
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7fa4573d0e50>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7fa4573d0e50>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240220-125716
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
