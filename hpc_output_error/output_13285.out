Seed: 11809766864434625432
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7fdd775cb700>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7fdd775cb700>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11100_0.01_0_10_1_20240126-150023.pth dataset3_sup1_image1_points0_loss_image0 20240219-130441
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11100_0.01_0_10_1_20240126-150023.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240219-130441_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240219-130441_test/test_output_DHR_31100_0.001_0_1_1_20240219-130441.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 1778216871877798160
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7faa12b91be0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7faa12b91be0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth dataset3_sup1_image1_points0_loss_image0 20240219-130758
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_11105_0.001_0_5_1_20240111-115251.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240219-130758_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240219-130758_test/test_output_DHR_31100_0.001_0_1_1_20240219-130758.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 12146778392215947237
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f83572b3b50>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f83572b3b50>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_21100_0.01_0_10_1_20240126-194030.pth dataset3_sup1_image1_points0_loss_image0 20240219-131112
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_21100_0.01_0_10_1_20240126-194030.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240219-131112_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240219-131112_test/test_output_DHR_31100_0.001_0_1_1_20240219-131112.txt
Test model finished +++++++++++++++++++++++++++++
Seed: 10490002925929725653
Device: cuda
Device: cuda
Device: cuda
Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Model params:  {'dataset': 3, 'sup': 1, 'image': 1, 'points': 0, 'loss_image_case': 0, 'loss_image': MSELoss(), 'loss_affine': <utils.utils1.loss_affine object at 0x7f170e86fdc0>, 'learning_rate': 0.001, 'decay_rate': 0.96, 'start_epoch': 0, 'num_epochs': 1, 'batch_size': 1, 'model_name': 'dataset3_sup1_image1_points0_loss_image0'}

Model name:  dataset3_sup1_image1_points0_loss_image0
Model code:  31100_0.001_0_1_1
Dataset used:  Synthetic eye hard
Supervised or unsupervised model:  Supervised
Loss image type:  Image used
Points used:  Points not used
Loss function case:  0
Loss function for image:  MSELoss()
Loss function for affine:  <utils.utils1.loss_affine object at 0x7f170e86fdc0>
Learning rate:  0.001
Decay rate:  0.96
Start epoch:  0
Number of epochs:  1
Batch size:  1



Testing the trained model: DHR +++++++++++++++++++++++
Test function input: DHR trained_models/keep/DHR_31100_0.01_0_10_1_20240126-112503.pth dataset3_sup1_image1_points0_loss_image0 20240219-131420
Loading DHR model (networks/affine_network_simple.py)

Running new version (not run SP on source image)
Loaded model from trained_models/keep/DHR_31100_0.01_0_10_1_20240126-112503.pth
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
class Affine_Network
torch.Size([1, 2, 256, 256])
class Feature_Extractor
Input shape: torch.Size([1, 2, 256, 256])
After input_layer shape: torch.Size([1, 64, 128, 128])
After layer_1 shape: torch.Size([1, 128, 66, 66])
After layer_2 shape: torch.Size([1, 128, 66, 66])
After layer_3 shape: torch.Size([1, 256, 35, 35])
After layer_4 shape: torch.Size([1, 256, 35, 35])
After layer_5 shape: torch.Size([1, 512, 20, 20])
After layer_6 shape: torch.Size([1, 1024, 12, 12])
After last_layer shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256, 1, 1])
x shape: torch.Size([1, 256])
After regression, x shape: torch.Size([1, 2, 3])
The test results are saved in output/DHR_31100_0.001_0_1_1_20240219-131420_test/metrics.csv
Training output:
Output saved to output/DHR_31100_0.001_0_1_1_20240219-131420_test/test_output_DHR_31100_0.001_0_1_1_20240219-131420.txt
Test model finished +++++++++++++++++++++++++++++
DHR_11100_0.01_0_10_1_20240126-150023.pth
DHR_11105_0.001_0_5_1_20240111-115251.pth
DHR_21100_0.01_0_10_1_20240126-194030.pth
DHR_31100_0.01_0_10_1_20240126-112503.pth
['python', 'test_points.py', '--model', 'DHR', '--sup', '1', '--dataset', '3', '--model_path', 'keep/DHR_11100_0.01_0_10_1_20240126-150023.pth']
['python', 'test_points.py', '--model', 'DHR', '--sup', '1', '--dataset', '3', '--model_path', 'keep/DHR_11105_0.001_0_5_1_20240111-115251.pth']
['python', 'test_points.py', '--model', 'DHR', '--sup', '1', '--dataset', '3', '--model_path', 'keep/DHR_21100_0.01_0_10_1_20240126-194030.pth']
['python', 'test_points.py', '--model', 'DHR', '--sup', '1', '--dataset', '3', '--model_path', 'keep/DHR_31100_0.01_0_10_1_20240126-112503.pth']
